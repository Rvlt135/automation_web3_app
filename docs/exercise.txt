Разработать интеграционные тесты для следующих компонентов:

Смарт-контракт на EVM-чейне Polygon Mumbai (адрес: 0x54EEDe47850fE932f5466B6fa708bf1176371966) для создания NFT-коллекций и NFT в них.
Бэкенд-приложение, которое отслеживает события контракта (п.1) на блокчейне, сохраняет их в памяти и предоставляет доступ через API. 
Образ: evercoinx/faraway:nft-collection-deployer-backend.
Важно учесть, что доступны только события, произошедшие после запуска бэкэнд-приложения.
Клиентское приложение (образ evercoinx/faraway:nft-collection-deployer-frontend), взаимодействующее со смарт-контрактом (создание и отправка транзакций) и бэкенд-приложением (получение и отображение событий).

Кейсы для тестирования
Создание коллекции: при корректном заполнении формы и отправке транзакции, ожидается вывод нового события содержащего данные из формы, а также адреса созданной коллекции в интерфейсе приложения.

Создание NFT: при корректном заполнении данных формы ожидается успешное создание NFT в выбранной коллекции и вывод события об этом в интерфейсе приложения.

Требования к решению
Решение должно быть представлено в виде проекта на GitHub с настроенным действием (action) для ручного запуска. Адреса образов должны быть вынесены в параметры действия (action) для проверки.

Замечания
Для ознакомления с функциональностью сервисов рекомендуется использовать браузер Chrome с установленным расширением Metamask.
Как добавить Polygon Mumbai тестовый чейн в Metamask: https://www.datawallet.com/crypto/add-polygon-mumbai-to-metamask
Для взаимодействия с EVM-чейном Polygon Mumbai рекомендуется использовать RPC-сервер по следующему адресу: https://rpc.ankr.com/polygon_mumbai.
Тестовые монеты Matic можно получить на сайте: https://mumbaifaucet.com/.
Полезные ссылки
https://www.alchemy.com/nft-api
https://www.quicknode.com/docs/ethereum/eth_getCode

1. Пишу взаимодействие с контрактом deployCollection()
2. Выполняю запрос get на проверку коллекций

Я правильно понимаю, что после создания коллекции мы должны проверить, что поля из формы соответствуют нозваниям из запроса /evnets? 
Или мне нужно проверить с помощью web3 фреймворка(например) что значения полей из блокчейн сети соответствуют, значениям из поля ответа events?
Или достаточно сделать действия с клиентом(фронт) приложения(selenium-a) и после уже проверить что значения введенные пользователем, соответствуют значениям из ответа /events(backend)?

curl http://172.19.0.3:4000/events
[{"collection":"0x06B900bb1222F28A3991E20113EAE71385D620c3","name":"newcollection","symbol":"symb","eventName":"CollectionCreated"},{"collection":"0x06B900bb1222F28A3991E20113EAE71385D620c3","recipient":"0xDF0D85Ba488cFBc36dd9e68ba956999a42F15879","tokenId":4644395326373888,"tokenURI":"tester.com4644395326373888","eventName":"TokenMinted"}]